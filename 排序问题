一、快速排序
1、时间复杂度  
   时间复杂度O(n㏒2(n))，第一层每次需要遍历一次为n，第二层需要㏒2(n)的遍历次数
2、算法实现过程
   首先随机指定一个数，如果此时数据刚好为正序或者倒序且刚好依次选取边缘值，则每次只可确定一个位置，则达到最差的情况等于冒泡排序
   制定好数后，将小于该数的部分放到该数的左边，将大于该数的部分放到该数的右边，之后再在两部分之中重复类似的操作
3、代码模板
   void quick_sort(int q[],int l,int r)
   {
      if(l >= r) return;
      
      int i = l - 1,j = r + 1,x = q[(l + r) / 2];
      while(i < j)
      {
          do i++; while(q[i] < x);
          do j--; while(q[i] > x);
          if(i < j) swap(q[i],q[j]);
      }
      quick_sort(q,l,j),quick_sort(q,j+1,r);
   }
 
   二、归并排序
   
